trigger:
- slave

resources:
- repo: self

variables:

  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'Free Trial(2cef1980-3d37-427c-bc69-f9e8ba27ea13)'
  imageRepository: 'springmvchibernate'
  containerRegistry: '{"loginServer":"dhananjayreg.azurecr.io", "id" : "/subscriptions/2cef1980-3d37-427c-bc69-f9e8ba27ea13/resourceGroups/dhananjayUbantu_group/providers/Microsoft.ContainerRegistry/registries/dhananjayreg"}'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'
  #imagePullSecret: 'acr2705df2b-auth'
  password: '1hE/0UbG4oSmcRhg969hS=MHEphA5RpB'
  # Agent VM image name
  vmImageName: 'ubuntu-latest'


stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        ResourceGroupName: 'dhananjayUbantu_group'              
        DockerNamespace: 'dhananjayreg'
        DockerRepository: 'springmvchibernate'
        containerRegistry: $(containerRegistry)
        dockerRegistryServiceConnection: $(dockerRegistryServiceConnection
        password: $(password)
        tags: |
          $(tag)
    - upload: manifests
      artifact: manifests

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build

  jobs:
  - deployment: Deploy
    displayName: Deploy
    pool:
      vmImage: $(vmImageName)
    environment: 'WEBAppdhananjay'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureRmWebAppDeployment@4
            displayName: Create imagePullSecret
            inputs:
              dockerRegistryEndpoint: $(dockerRegistryServiceConnection)
              ConnectionType: 'AzureRM'
              azureSubscription: 'Free Trial(2cef1980-3d37-427c-bc69-f9e8ba27ea13)'
              appType: 'webAppContainer'
              WebAppName: 'WEBAppdhananjay'
              deployToSlotOrASE: true
              ResourceGroupName: 'dhananjayUbantu_group'
              SlotName: 'production'
              DockerNamespace: 'dhananjayreg'
              DockerRepository: 'springmvchibernate'
              containerRegistry: $(containerRegistry)
              dockerRegistryServiceConnection: $(dockerRegistryServiceConnection
              password: $(password)
              action: deploy
              manifests: |
                $(Pipeline.Workspace)/manifests/deployment.yml
                $(Pipeline.Workspace)/manifests/service.yml
               
              containers: |
                $(containerRegistry)/$(imageRepository):$(tag)